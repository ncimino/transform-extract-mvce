plugins {
    id 'base'
}

version '1.0.0'

def artifactType = Attribute.of('artifactType', String)
def unzipped = Attribute.of('unzipped', Boolean)

configurations {
    implementation {
        canBeConsumed = false
        canBeResolved = false
    }
    cppCompile {
        canBeResolved = true
        extendsFrom implementation
        attributes.attribute Usage.USAGE_ATTRIBUTE, objects.named(Usage.class, Usage.C_PLUS_PLUS_API)
        attributes.attribute(unzipped, true)
    }
}

dependencies {
    attributesSchema {
        attribute(unzipped)
    }
    artifactTypes.create("zip") {
        attributes.attribute(unzipped, false)
    }
}

tasks.register('someAction', Copy) {
    from configurations.cppCompile
    into buildDir
    doLast { logger.lifecycle("== buildDir has (expect exploded): {}", buildDir.listFiles()) }
}
tasks.assemble.inputs.files tasks.someAction.outputs.files

repositories {
    maven {
        url "../lib/build/repo"
    }
}

dependencies {
    registerTransform(UnzipTransform, {
        from.attribute(unzipped, false).attribute(artifactType, "zip")
        to.attribute(unzipped, true).attribute(artifactType, "zip")
    })
    implementation "com.company:lib:1.0.0"
}